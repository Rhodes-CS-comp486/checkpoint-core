# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - 8000:8000

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker compose up`.
    depends_on:
      db:
        condition: service_healthy
  db:
      image: postgres:15.1
      restart: always
      environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      user: root
      ports:
          - "5432:5432"
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
        interval: 10s
        timeout: 5s
        retries: 5
      volumes:
          - /home/my_user/volumes/postgres/data:/var/lib/postgresql/data
          - /home/my_user/volumes/postgres/config:/etc/postgresql
  postgres_setup:
      image: postgres:15.1
      user: root
      volumes:
          - /home/postgres/volumes/postgres/data:/var/lib/postgresql/data
          - /home/postgres/volumes/postgres/config:/etc/postgresql
      entrypoint: [ "bash", "-c", "chmod 750 -R /var/lib/postgresql/data && chmod 750 -R /etc/postgresql"] 
      depends_on:
          - db
  # db:
  #   image: postgres
  #   restart: unless-stopped
  #   container_name: db
  #   environment:
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   ports:
  #     - '5432:5432'
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   volumes:
  #     - /home/postgres/volumes/postgres/data:/var/lib/postgresql/data
  #     - /home/postgres/volumes/postgres/config:/etc/postgresql
  #   env_file:
  #     - .env

volumes:
  db-data: 
    driver: local
secrets:
  db-password:
    file: db/password.txt

